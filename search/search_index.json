{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ai-coustics SDK for Python","text":"<p>Welcome to the ai-coustics real-time speech enhancement SDK for Python.</p> <p>This package provides Python bindings and binaries for high-quality, low-latency neural audio enhancement.</p> <p>Highlights:</p> <ul> <li>Real-time processing optimized for streaming</li> <li>Multiple model sizes: QUAIL_L, QUAIL_S, QUAIL_XS</li> <li>Simple, Pythonic API with context-manager support</li> </ul> <p>Quick example:</p> <pre><code>import os\nimport numpy as np\nfrom dotenv import load_dotenv\nfrom aic import Model, AICModelType, AICParameter\n\nload_dotenv()\nlicense_key = os.getenv(\"AICOUSTICS_API_KEY\", \"\")\n\nwith Model(AICModelType.QUAIL_L, license_key=license_key, sample_rate=48000, channels=1, frames=480) as model:\n    model.set_parameter(AICParameter.ENHANCEMENT_LEVEL, 0.8)\n\n    audio = np.random.randn(1, 480).astype(np.float32)\n    enhanced = model.process(audio)\n</code></pre> <p>Use the navigation to learn how to get started and explore the full API.</p>"},{"location":"api/","title":"API Reference","text":""},{"location":"api/#model-class","title":"Model Class","text":""},{"location":"api/#aic.Model","title":"<code>aic.Model(model_type=AICModelType.QUAIL_L, license_key=None, *, sample_rate, channels=1, frames=None)</code>","text":"<p>RAII + context-manager convenience around the C interface.</p> <p>Parameters:</p> <ul> <li> <code>model_type</code>               (<code>AICModelType</code>, default:                   <code>QUAIL_L</code> )           \u2013            <p>The neural model variant to load; defaults to :pydata:<code>AICModelType.QUAIL_L</code>.</p> </li> <li> <code>license_key</code>               (<code>str | bytes</code>, default:                   <code>None</code> )           \u2013            <p>Optional signed license string.  Empty string means trial mode.</p> </li> </ul> <p>Create a model wrapper.</p> <p>Parameters:</p> <ul> <li> <code>model_type</code>               (<code>AICModelType</code>, default:                   <code>QUAIL_L</code> )           \u2013            <p>The neural model variant to load; defaults to :pydata:<code>AICModelType.QUAIL_L</code>.</p> </li> <li> <code>license_key</code>               (<code>str | bytes</code>, default:                   <code>None</code> )           \u2013            <p>Signed license string. Required. Obtain a key at https://developers.ai-coustics.io.</p> </li> <li> <code>sample_rate</code>               (<code>int</code>)           \u2013            <p>Input/output sample rate in Hz. Required.</p> </li> <li> <code>channels</code>               (<code>int</code>, default:                   <code>1</code> )           \u2013            <p>Channel count. Optional, defaults to 1.</p> </li> <li> <code>frames</code>               (<code>int | None</code>, default:                   <code>None</code> )           \u2013            <p>Optional block length in frames for streaming. If omitted, the model's :py:meth:<code>optimal_num_frames</code> will be used.</p> </li> </ul>"},{"location":"api/#aic.Model.close","title":"<code>close()</code>","text":"<p>Explicitly free native resources (idempotent).</p>"},{"location":"api/#aic.Model.get_parameter","title":"<code>get_parameter(param)</code>","text":"<p>Get the current value of a parameter.</p> <p>Parameters:</p> <ul> <li> <code>param</code>               (<code>AICParameter</code>)           \u2013            <p>Parameter enum value. See :py:class:<code>aic._bindings.AICParameter</code>.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>float</code>           \u2013            <p>The current value of the parameter.</p> </li> </ul>"},{"location":"api/#aic.Model.library_version","title":"<code>library_version()</code>  <code>staticmethod</code>","text":"<p>Return the version string of the underlying AIC SDK library.</p> <p>Returns:</p> <ul> <li> <code>str</code>           \u2013            <p>Semantic version string.</p> </li> </ul>"},{"location":"api/#aic.Model.optimal_num_frames","title":"<code>optimal_num_frames()</code>","text":"<p>Return the suggested buffer length for streaming.</p> <p>Returns:</p> <ul> <li> <code>int</code>           \u2013            <p>Recommended block size in frames.</p> </li> </ul>"},{"location":"api/#aic.Model.optimal_sample_rate","title":"<code>optimal_sample_rate()</code>","text":"<p>Return the suggested I/O sample rate for the loaded model.</p> <p>Returns:</p> <ul> <li> <code>int</code>           \u2013            <p>Sample rate in Hz.</p> </li> </ul>"},{"location":"api/#aic.Model.process","title":"<code>process(pcm, *, channels=None)</code>","text":"<p>Enhance pcm in-place using planar processing (convenience pass-through).</p> <p>Parameters:</p> <ul> <li> <code>pcm</code>               (<code>ndarray</code>)           \u2013            <p>Planar 2-D array of shape (channels, frames) Data must be <code>float32</code> in the linear -1\u2026+1 range. Any non-conforming array is copied to a compliant scratch buffer.</p> </li> <li> <code>channels</code>               (<code>int | None</code>, default:                   <code>None</code> )           \u2013            <p>Override channel count auto-detected from pcm.  Rarely needed.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The same array instance (modified in-place) or a contiguous copy if a dtype/stride conversion had been necessary.</p> </li> </ul>"},{"location":"api/#aic.Model.process_interleaved","title":"<code>process_interleaved(pcm, channels)</code>","text":"<p>Enhance pcm in-place using interleaved processing (convenience pass-through).</p> <p>Parameters:</p> <ul> <li> <code>pcm</code>               (<code>ndarray</code>)           \u2013            <p>Interleaved 1-D array of shape (frames,) containing interleaved audio data Data must be <code>float32</code> in the linear -1\u2026+1 range. Any non-conforming array is copied to a compliant scratch buffer.</p> </li> <li> <code>channels</code>               (<code>int</code>)           \u2013            <p>Number of channels in the interleaved data.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The same array instance (modified in-place) or a contiguous copy if a dtype/stride conversion had been necessary.</p> </li> </ul>"},{"location":"api/#aic.Model.processing_latency","title":"<code>processing_latency()</code>","text":"<p>Return the current output delay (in samples).</p> <p>Returns:</p> <ul> <li> <code>int</code>           \u2013            <p>End-to-end delay in samples at the configured sample rate.</p> </li> </ul>"},{"location":"api/#aic.Model.reset","title":"<code>reset()</code>","text":"<p>Flush the model's internal state (between recordings, etc.).</p>"},{"location":"api/#aic.Model.set_parameter","title":"<code>set_parameter(param, value)</code>","text":"<p>Update an algorithm parameter.</p> <p>Parameters:</p> <ul> <li> <code>param</code>               (<code>AICParameter</code>)           \u2013            <p>Parameter enum value. See :py:class:<code>aic._bindings.AICParameter</code>.</p> </li> <li> <code>value</code>               (<code>float</code>)           \u2013            <p>New value for the parameter (float).</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>RuntimeError</code>             \u2013            <p>If the parameter is out of range or the SDK call fails.</p> </li> </ul>"},{"location":"examples/","title":"Examples","text":""},{"location":"examples/#enhance-a-wav-file","title":"Enhance a WAV file","text":"<pre><code>AICOUSTICS_API_KEY=your_key_here python examples/enhance.py input.wav output.wav --strength 80\n</code></pre>"},{"location":"examples/#streaming-like-chunked-processing","title":"Streaming-like chunked processing","text":"<pre><code>import numpy as np\nfrom aic import Model, AICModelType\n\nwith Model(AICModelType.QUAIL_S, sample_rate=48000, channels=1, frames=480) as model:\n\n    audio_stream = ...  # your audio input\n    while audio_stream.has_data():\n        chunk = audio_stream.get_chunk(480)\n        enhanced = model.process(chunk)\n        # play or store `enhanced`\n</code></pre>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#installation","title":"Installation","text":"<pre><code>pip install aic-sdk\n</code></pre> <p>For examples: <pre><code>pip install -r examples/requirements.txt\n</code></pre></p>"},{"location":"getting-started/#license-key","title":"License Key","text":"<p>Set the environment variable (or use a <code>.env</code> file), and pass it to the model.</p> <pre><code>export AICOUSTICS_API_KEY=\"your_license_key\"\n</code></pre> <p>or in <code>.env</code>: <pre><code>AICOUSTICS_API_KEY=your_license_key\n</code></pre></p>"},{"location":"getting-started/#first-enhancement","title":"First Enhancement","text":"<pre><code>import os\nimport numpy as np\nfrom dotenv import load_dotenv\nfrom aic import Model, AICModelType, AICParameter\n\nload_dotenv()\nlicense_key = os.getenv(\"AICOUSTICS_API_KEY\")\n\nwith Model(AICModelType.QUAIL_L, license_key=license_key, sample_rate=48000, channels=1, frames=480) as model:\n    model.set_parameter(AICParameter.ENHANCEMENT_LEVEL, 0.7)\n\n    audio = np.random.randn(1, 480).astype(np.float32)\n    enhanced = model.process(audio)\n</code></pre> <ul> <li>Use <code>optimal_num_frames()</code> to get a recommended buffer size for streaming.</li> <li>Use <code>optimal_sample_rate()</code> for the preferred I/O sample rate.</li> </ul>"},{"location":"low-level-bindings/","title":"Low-level C bindings (<code>aic._bindings</code>)","text":"<p>The high-level <code>aic.Model</code> API is recommended for most applications. The low-level bindings mirror the C API and are useful for advanced integrations, benchmarks, or when you need fine-grained control.</p>"},{"location":"low-level-bindings/#core-functions","title":"Core functions","text":""},{"location":"low-level-bindings/#aic._bindings.model_create","title":"<code>aic._bindings.model_create(model_type, license_key)</code>","text":"<p>Create a new audio enhancement model instance.</p> <p>Multiple models can be created to process different audio streams simultaneously or to switch between enhancement algorithms.</p> <p>Parameters:</p> <ul> <li> <code>model_type</code>               (<code>AICModelType</code>)           \u2013            <p>Selects the enhancement algorithm variant.</p> </li> <li> <code>license_key</code>               (<code>bytes</code>)           \u2013            <p>Null-terminated license string. Must not be empty.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>AICModelPtrT</code>           \u2013            <p>Opaque handle to the created model instance.</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>RuntimeError</code>             \u2013            <p>If the underlying C call fails. The error message includes the corresponding :class:<code>AICErrorCode</code> name from the SDK.</p> </li> </ul>"},{"location":"low-level-bindings/#aic._bindings.model_destroy","title":"<code>aic._bindings.model_destroy(model)</code>","text":"<p>Release all resources associated with a model instance.</p> <p>Safe to call with a null/invalid handle; the operation is idempotent.</p> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Model instance to destroy. Can be <code>None</code>.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>None</code>           \u2013            </li> </ul>"},{"location":"low-level-bindings/#aic._bindings.model_initialize","title":"<code>aic._bindings.model_initialize(model, sample_rate, num_channels, num_frames)</code>","text":"<p>Configure the model for a specific audio format.</p> <p>Must be called before processing. For the lowest delay use the values returned by :func:<code>get_optimal_sample_rate</code> and :func:<code>get_optimal_num_frames</code>.</p> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Model handle. Must not be <code>None</code>.</p> </li> <li> <code>sample_rate</code>               (<code>int</code>)           \u2013            <p>Audio sample rate in Hz (8000\u2013192000).</p> </li> <li> <code>num_channels</code>               (<code>int</code>)           \u2013            <p>Number of audio channels (1 for mono, 2 for stereo, etc.).</p> </li> <li> <code>num_frames</code>               (<code>int</code>)           \u2013            <p>Number of samples per channel per processing call.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>None</code>           \u2013            </li> </ul> <p>Raises:</p> <ul> <li> <code>RuntimeError</code>             \u2013            <p>If the configuration is not supported by the model.</p> </li> </ul> Notes <p>Not real-time safe: do not call from time-critical audio threads.</p>"},{"location":"low-level-bindings/#aic._bindings.model_reset","title":"<code>aic._bindings.model_reset(model)</code>","text":"<p>Clear all internal state and buffers (real-time safe).</p> <p>Call this when the audio stream is interrupted or when seeking to prevent artifacts from previous audio content. The model remains initialized with the same configuration.</p> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Model instance. Must not be <code>None</code>.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>None</code>           \u2013            </li> </ul>"},{"location":"low-level-bindings/#processing","title":"Processing","text":""},{"location":"low-level-bindings/#aic._bindings.process_planar","title":"<code>aic._bindings.process_planar(model, audio_ptr, num_channels, num_frames)</code>","text":"<p>Process audio in-place with separate buffers per channel (planar layout).</p> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Initialized model instance.</p> </li> <li> <code>audio_ptr</code>               (<code>Any</code>)           \u2013            <p>Array of channel buffer pointers (<code>float* const*</code> on the C side).</p> </li> <li> <code>num_channels</code>               (<code>int</code>)           \u2013            <p>Number of channels (must match initialization; max 16 channels).</p> </li> <li> <code>num_frames</code>               (<code>int</code>)           \u2013            <p>Number of samples per channel (must match initialization).</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>None</code>           \u2013            </li> </ul> <p>Raises:</p> <ul> <li> <code>RuntimeError</code>             \u2013            <p>If the model is not initialized, inputs are null, or the channel/frame configuration does not match the initialization.</p> </li> </ul>"},{"location":"low-level-bindings/#aic._bindings.process_interleaved","title":"<code>aic._bindings.process_interleaved(model, audio_ptr, num_channels, num_frames)</code>","text":"<p>Process audio in-place with interleaved channel data.</p> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Initialized model instance.</p> </li> <li> <code>audio_ptr</code>               (<code>Any</code>)           \u2013            <p>Interleaved audio buffer pointer.</p> </li> <li> <code>num_channels</code>               (<code>int</code>)           \u2013            <p>Number of channels (must match initialization).</p> </li> <li> <code>num_frames</code>               (<code>int</code>)           \u2013            <p>Number of frames per channel (must match initialization).</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>None</code>           \u2013            </li> </ul> <p>Raises:</p> <ul> <li> <code>RuntimeError</code>             \u2013            <p>If the model is not initialized, inputs are null, or the channel/frame configuration does not match the initialization.</p> </li> </ul>"},{"location":"low-level-bindings/#parameters","title":"Parameters","text":""},{"location":"low-level-bindings/#aic._bindings.set_parameter","title":"<code>aic._bindings.set_parameter(model, param, value)</code>","text":"<p>Modify a model parameter (thread-safe).</p> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Model instance. Must not be <code>None</code>.</p> </li> <li> <code>param</code>               (<code>AICParameter</code>)           \u2013            <p>Parameter to modify.</p> </li> <li> <code>value</code>               (<code>float</code>)           \u2013            <p>New parameter value. See parameter docs for valid ranges.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>None</code>           \u2013            </li> </ul> <p>Raises:</p> <ul> <li> <code>RuntimeError</code>             \u2013            <p>If the value is outside the acceptable range.</p> </li> </ul>"},{"location":"low-level-bindings/#aic._bindings.get_parameter","title":"<code>aic._bindings.get_parameter(model, param)</code>","text":"<p>Retrieve the current value of a parameter (thread-safe).</p> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Model instance. Must not be <code>None</code>.</p> </li> <li> <code>param</code>               (<code>AICParameter</code>)           \u2013            <p>Parameter to query.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>float</code>           \u2013            <p>The current value of the parameter.</p> </li> </ul>"},{"location":"low-level-bindings/#information-helpers","title":"Information helpers","text":""},{"location":"low-level-bindings/#aic._bindings.get_processing_latency","title":"<code>aic._bindings.get_processing_latency(model)</code>","text":"<p>Return total output delay in samples for the current configuration.</p> Delay behavior <ul> <li>Before initialization: returns the base processing delay using the   model's optimal frame size at its native sample rate.</li> <li>After initialization: returns the actual delay for the configured   sample rate and frame size, including any additional buffering when   using non-optimal frame sizes.</li> </ul> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Model instance. Must not be <code>None</code>.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>int</code>           \u2013            <p>Delay in samples (at the current sample rate). Convert to milliseconds via <code>delay_ms = delay_samples * 1000 / sample_rate</code>.</p> </li> </ul>"},{"location":"low-level-bindings/#aic._bindings.get_output_delay","title":"<code>aic._bindings.get_output_delay(model)</code>","text":"<p>Alias of :func:<code>get_processing_latency</code>.</p> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Model instance.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>int</code>           \u2013            <p>Delay in samples.</p> </li> </ul>"},{"location":"low-level-bindings/#aic._bindings.get_optimal_sample_rate","title":"<code>aic._bindings.get_optimal_sample_rate(model)</code>","text":"<p>Return the model's native sample rate in Hz.</p> <p>Each model is optimized for a specific sample rate. While processing at other rates is supported, enhancement quality for high frequencies is bounded by the model's native Nyquist frequency.</p> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Model instance.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>int</code>           \u2013            <p>Native/optimal sample rate in Hz.</p> </li> </ul>"},{"location":"low-level-bindings/#aic._bindings.get_optimal_num_frames","title":"<code>aic._bindings.get_optimal_num_frames(model)</code>","text":"<p>Return the optimal number of frames for minimal latency.</p> <p>Using the optimal frame size avoids internal buffering and thus minimizes end-to-end delay. The optimal value depends on sample rate and updates when the model is initialized with a different rate. Before initialization this returns the optimal size for the model's native sample rate.</p> <p>Parameters:</p> <ul> <li> <code>model</code>               (<code>AICModelPtrT</code>)           \u2013            <p>Model instance.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>int</code>           \u2013            <p>Optimal frame count for the current/native sample rate.</p> </li> </ul>"},{"location":"low-level-bindings/#aic._bindings.get_library_version","title":"<code>aic._bindings.get_library_version()</code>","text":"<p>Return the SDK version string.</p> <p>The returned value originates from a static C string and is safe to use for the lifetime of the program.</p> <p>Returns:</p> <ul> <li> <code>str</code>           \u2013            <p>Semantic version string, for example <code>\"1.2.3\"</code>.</p> </li> </ul>"},{"location":"low-level-bindings/#enums","title":"Enums","text":""},{"location":"low-level-bindings/#aic._bindings.AICErrorCode","title":"<code>aic._bindings.AICErrorCode</code>","text":"<p>Error codes returned by the C API.</p> <p>These mirror the values from the underlying SDK and are raised as <code>RuntimeError</code> by the thin wrappers in this module when a call does not succeed.</p>"},{"location":"low-level-bindings/#aic._bindings.AICErrorCode.AUDIO_CONFIG_MISMATCH","title":"<code>AUDIO_CONFIG_MISMATCH = 5</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Process was called with a different audio buffer configuration than initialized.</p>"},{"location":"low-level-bindings/#aic._bindings.AICErrorCode.LICENSE_EXPIRED","title":"<code>LICENSE_EXPIRED = 3</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>License key has expired.</p>"},{"location":"low-level-bindings/#aic._bindings.AICErrorCode.LICENSE_INVALID","title":"<code>LICENSE_INVALID = 2</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>License key format is invalid or corrupted.</p>"},{"location":"low-level-bindings/#aic._bindings.AICErrorCode.NOT_INITIALIZED","title":"<code>NOT_INITIALIZED = 6</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Model must be initialized before this operation.</p>"},{"location":"low-level-bindings/#aic._bindings.AICErrorCode.NULL_POINTER","title":"<code>NULL_POINTER = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Required pointer argument was NULL.</p>"},{"location":"low-level-bindings/#aic._bindings.AICErrorCode.PARAMETER_OUT_OF_RANGE","title":"<code>PARAMETER_OUT_OF_RANGE = 7</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Parameter value is outside acceptable range.</p>"},{"location":"low-level-bindings/#aic._bindings.AICErrorCode.SDK_ACTIVATION_ERROR","title":"<code>SDK_ACTIVATION_ERROR = 8</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>SDK activation failed.</p>"},{"location":"low-level-bindings/#aic._bindings.AICErrorCode.SUCCESS","title":"<code>SUCCESS = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Operation completed successfully.</p>"},{"location":"low-level-bindings/#aic._bindings.AICErrorCode.UNSUPPORTED_AUDIO_CONFIG","title":"<code>UNSUPPORTED_AUDIO_CONFIG = 4</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Audio configuration is not supported by the model.</p>"},{"location":"low-level-bindings/#aic._bindings.AICModelType","title":"<code>aic._bindings.AICModelType</code>","text":"<p>Available model types for audio enhancement.</p> <p>Each model is optimized for a native sample rate and frame size and has a characteristic processing latency.</p>"},{"location":"low-level-bindings/#aic._bindings.AICModelType.QUAIL_L16","title":"<code>QUAIL_L16 = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specifications:</p> <ul> <li>Native sample rate: 16 kHz</li> <li>Native num frames: 160</li> <li>Processing latency: 30 ms</li> </ul>"},{"location":"low-level-bindings/#aic._bindings.AICModelType.QUAIL_L48","title":"<code>QUAIL_L48 = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specifications:</p> <ul> <li>Native sample rate: 48 kHz</li> <li>Native num frames: 480</li> <li>Processing latency: 30 ms</li> </ul>"},{"location":"low-level-bindings/#aic._bindings.AICModelType.QUAIL_L8","title":"<code>QUAIL_L8 = 2</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specifications:</p> <ul> <li>Native sample rate: 8 kHz</li> <li>Native num frames: 80</li> <li>Processing latency: 30 ms</li> </ul>"},{"location":"low-level-bindings/#aic._bindings.AICModelType.QUAIL_S16","title":"<code>QUAIL_S16 = 4</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specifications:</p> <ul> <li>Native sample rate: 16 kHz</li> <li>Native num frames: 160</li> <li>Processing latency: 30 ms</li> </ul>"},{"location":"low-level-bindings/#aic._bindings.AICModelType.QUAIL_S48","title":"<code>QUAIL_S48 = 3</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specifications:</p> <ul> <li>Native sample rate: 48 kHz</li> <li>Native num frames: 480</li> <li>Processing latency: 30 ms</li> </ul>"},{"location":"low-level-bindings/#aic._bindings.AICModelType.QUAIL_S8","title":"<code>QUAIL_S8 = 5</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specifications:</p> <ul> <li>Native sample rate: 8 kHz</li> <li>Native num frames: 80</li> <li>Processing latency: 30 ms</li> </ul>"},{"location":"low-level-bindings/#aic._bindings.AICModelType.QUAIL_XS","title":"<code>QUAIL_XS = 6</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specifications:</p> <ul> <li>Native sample rate: 48 kHz</li> <li>Native num frames: 480</li> <li>Processing latency: 10 ms</li> </ul>"},{"location":"low-level-bindings/#aic._bindings.AICModelType.QUAIL_XXS","title":"<code>QUAIL_XXS = 7</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specifications:</p> <ul> <li>Native sample rate: 48 kHz</li> <li>Native num frames: 480</li> <li>Processing latency: 10 ms</li> </ul>"},{"location":"low-level-bindings/#aic._bindings.AICParameter","title":"<code>aic._bindings.AICParameter</code>","text":"<p>Configurable parameters for audio enhancement.</p>"},{"location":"low-level-bindings/#aic._bindings.AICParameter.ENHANCEMENT_LEVEL","title":"<code>ENHANCEMENT_LEVEL = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Controls the intensity of speech enhancement processing.</p> <p>Range: 0.0 \u2026 1.0</p> <ul> <li>0.0: Bypass (original signal passes through unchanged)</li> <li>1.0: Full enhancement (maximum noise reduction, potentially more artifacts)</li> </ul> <p>Default: 1.0</p>"},{"location":"low-level-bindings/#aic._bindings.AICParameter.NOISE_GATE_ENABLE","title":"<code>NOISE_GATE_ENABLE = 2</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Enable or disable a noise gate as a pre-processing step.</p> <p>Valid values: 0.0 or 1.0</p> <ul> <li>0.0: Noise gate disabled (C library default)</li> <li>1.0: Noise gate enabled</li> </ul> <p>Default: 0.0</p>"},{"location":"low-level-bindings/#aic._bindings.AICParameter.VOICE_GAIN","title":"<code>VOICE_GAIN = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compensates for perceived volume reduction after noise removal.</p> <p>Range: 0.1 \u2026 4.0 (linear amplitude multiplier)</p> <ul> <li>0.1: Significant volume reduction (\u2248 \u221220 dB)</li> <li>1.0: No gain change (0 dB, default)</li> <li>2.0: Double amplitude (+6 dB)</li> <li>4.0: Maximum boost (+12 dB)</li> </ul> <p>Formula: gain_dB = 20 \u00d7 log10(value) Default: 1.0</p>"}]}