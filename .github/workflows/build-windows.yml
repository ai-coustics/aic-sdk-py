name: Build & publish Windows wheels

on:
  push:
    branches: [ corvin/c-bindings ]
    tags: ["*.*.*"]        # build + publish when you tag a release
  workflow_dispatch:        # allow manual runs

jobs:
  build-windows:
    environment: publish
    runs-on: windows-latest
    strategy:
      matrix:
        # Use one Python version for the host, cibuildwheel installs all needed CPythons
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up host Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel==2.18.0 tomli

      # cibuildwheel will call this script once _per architecture_.
      - name: Build wheels with bundled SDK
        env:
          GH_TOKEN: ${{ secrets.AIC_SDK_ACCESS_TOKEN }}
          CIBW_ARCHS_WINDOWS: "AMD64"  # x86_64 only for now
          CIBW_SKIP: "cp36-* cp37-* cp38-*"  # Skip old Python versions
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT_PASSTHROUGH_WINDOWS: "GH_TOKEN"
          CIBW_BEFORE_BUILD_WINDOWS: >
            pip install tomli &&
            gh --version &&
            python -c "import tomli, pathlib; version = tomli.loads(pathlib.Path('pyproject.toml').read_text())['project']['version']; print(f'Version: {version}')" &&
            gh release list --repo ai-coustics/aic-sdk --limit 5 &&
            gh release download --repo ai-coustics/aic-sdk "0.5.3" --pattern "aic-sdk-x86_64-pc-windows-msvc-0.5.3.zip" --output sdk.zip --clobber &&
            powershell -Command "Expand-Archive -Path 'sdk.zip' -DestinationPath '.' -Force" &&
            powershell -Command "if (Test-Path 'lib') { Write-Host 'lib directory found:'; Get-ChildItem 'lib' } else { Write-Host 'ERROR: lib directory not found!'; Get-ChildItem '.' }" &&
            powershell -Command "New-Item -ItemType Directory -Path 'aic/libs/windows' -Force | Out-Null" &&
            powershell -Command "if (Test-Path 'lib/*.dll') { Copy-Item 'lib/*.dll' 'aic/libs/windows/' -Force; Write-Host 'DLL files copied'; Get-ChildItem 'aic/libs/windows/' } else { Write-Host 'No DLL files found'; Get-ChildItem 'lib' }"
        run: |
          cibuildwheel --output-dir wheelhouse

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-wheels
          path: wheelhouse/*.whl

#   publish-to-pypi:
#     needs: build-windows
#     if: startsWith(github.ref, 'refs/tags/')
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/download-artifact@v4
#         with:
#           name: windows-wheels
#           path: dist

#       - name: Publish wheels to PyPI
#         uses: pypa/gh-action-pypi-publish@v1.8.6
#         with:
#           user: __token__
#           password: ${{ secrets.PYPI_API_TOKEN }} 